services:
  backend:
    build:
      context: .
    volumes:
      - ./backend/:/app
      - ./pyproject.toml:/app/pyproject.toml
      - ./poetry.lock:/app/poetry.lock
    ports:
      - "8000:8000"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - SECRET_KEY=${SECRET_KEY}
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=recipes
      - DB_USER=recipe_user
      - DB_PASSWORD=bananabread
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-8000}
    depends_on:
      database:
        condition: service_healthy
    command: poetry run uvicorn main:app --host ${HOST:-0.0.0.0} --port ${PORT:-8000} --reload
  database:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: banana_bread
      POSTGRES_DB: recipes
    volumes:
      - ./database/data/:/var/lib/postgresql/data
      - ./database/initialization/:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d recipes"]
      interval: 6s
      timeout: 5s
      retries: 5
