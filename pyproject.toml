[tool.poetry]
name = "recipes"
version = "0.1.0"
description = "Recipe and meal planning softerware"
authors = ["Phill Tornroth <famousactress@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.112.0"
openai = "^1.38.0"
uvicorn = "^0.30.5"
pyyaml = "^6.0.2"
psycopg2-binary = "^2.9.10"
pinecone = {extras = ["grpc"], version = "^5.4.1"}
python-multipart = "^0.0.19"
sqlalchemy = "^2.0.36"
pillow = "^11.0.0"
beautifulsoup4 = "^4.12.3"
requests = "^2.32.3"
tiktoken = "^0.8.0"
authlib = "^1.2.0"
httpx = "^0.24.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}

[tool.poetry.group.dev.dependencies]
black = "^24.0.0"
isort = "^5.13.0"
flake8 = "^7.0.0"
mypy = "^1.8.0"
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.0.0"
pre-commit = "^3.6.0"
types-requests = "^2.32.4.20250611"
types-pyyaml = "^6.0.12.20250516"


[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["backend"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
mypy_path = "backend"
exclude = [
    "tests/",
    "database/",
]

[[tool.mypy.overrides]]
module = [
    "pinecone.*",
    "tiktoken.*",
    "bs4.*",
    "PIL.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=backend",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["backend"]
omit = [
    "*/tests/*",
    "*/test_*",
    "backend/static/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
